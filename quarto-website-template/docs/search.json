[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "My name is Oliver Atwood. I’m a designer focused on the interaction of the built and natural environment. personal website.\nThis site is an example site showing how to use Quarto for the final project for MUSA 550, during fall 2023."
  },
  {
    "objectID": "analysis/4-folium.html",
    "href": "analysis/4-folium.html",
    "title": "Interactive Maps with Folium",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and shows examples of embedding interactive maps produced using Folium."
  },
  {
    "objectID": "analysis/4-folium.html#finding-the-shortest-route",
    "href": "analysis/4-folium.html#finding-the-shortest-route",
    "title": "Interactive Maps with Folium",
    "section": "Finding the shortest route",
    "text": "Finding the shortest route\nThis example finds the shortest route between the Art Musuem and the Liberty Bell using osmnx.\n\nimport osmnx as ox\n\nFirst, identify the lat/lng coordinates for our places of interest. Use osmnx to download the geometries for the Libery Bell and Art Museum.\n\nphilly_tourism = ox.features_from_place(\"Philadelphia, PA\", tags={\"tourism\": True})\n\n\nart_museum = philly_tourism.query(\"name == 'Philadelphia Museum of Art'\").squeeze()\n\nart_museum.geometry\n\n\n\n\n\nliberty_bell = philly_tourism.query(\"name == 'Liberty Bell'\").squeeze()\n\nliberty_bell.geometry\n\n\n\n\nNow, extract the lat and lng coordinates\nFor the Art Museum geometry, we can use the .geometry.centroid attribute to calculate the centroid of the building footprint.\n\nliberty_bell_x = liberty_bell.geometry.x\nliberty_bell_y = liberty_bell.geometry.y\n\n\nart_museum_x = art_museum.geometry.centroid.x\nart_museum_y = art_museum.geometry.centroid.y\n\nNext, use osmnx to download the street graph around Center City.\n\nG_cc = ox.graph_from_address(\n    \"City Hall, Philadelphia, USA\", dist=1500, network_type=\"drive\"\n)\n\nNext, identify the nodes in the graph closest to our points of interest.\n\n# Get the origin node (Liberty Bell)\norig_node = ox.nearest_nodes(G_cc, liberty_bell_x, liberty_bell_y)\n\n# Get the destination node (Art Musuem)\ndest_node = ox.nearest_nodes(G_cc, art_museum_x, art_museum_y)\n\nFind the shortest path, based on the distance of the edges:\n\n# Get the shortest path --&gt; just a list of node IDs\nroute = ox.shortest_path(G_cc, orig_node, dest_node, weight=\"length\")\n\nHow about an interactive version?\nosmnx has a helper function ox.utils_graph.route_to_gdf() to convert a route to a GeoDataFrame of edges.\n\nox.utils_graph.route_to_gdf(G_cc, route, weight=\"length\").explore(\n    tiles=\"cartodb positron\",\n    color=\"red\",\n)\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/4-folium.html#examining-trash-related-311-requests",
    "href": "analysis/4-folium.html#examining-trash-related-311-requests",
    "title": "Interactive Maps with Folium",
    "section": "Examining Trash-Related 311 Requests",
    "text": "Examining Trash-Related 311 Requests\nFirst, let’s load the dataset from a CSV file and convert to a GeoDataFrame:\n\n\nCode\n# Load the data from a CSV file into a pandas DataFrame\ntrash_requests_df = pd.read_csv(\n    \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-4/main/data/trash_311_requests_2020.csv\"\n)\n\n# Remove rows with missing geometry\ntrash_requests_df = trash_requests_df.dropna(subset=[\"lat\", \"lon\"])\n\n\n# Create our GeoDataFrame with geometry column created from lon/lat\ntrash_requests = gpd.GeoDataFrame(\n    trash_requests_df,\n    geometry=gpd.points_from_xy(trash_requests_df[\"lon\"], trash_requests_df[\"lat\"]),\n    crs=\"EPSG:4326\",\n)\n\n\nLoad neighborhoods and do the spatial join to associate a neighborhood with each ticket:\n\n\nCode\n# Load the neighborhoods\nneighborhoods = gpd.read_file(\n    \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-4/main/data/zillow_neighborhoods.geojson\"\n)\n\n# Do the spatial join to add the \"ZillowName\" column\nrequests_with_hood = gpd.sjoin(\n    trash_requests,\n    neighborhoods.to_crs(trash_requests.crs),\n    predicate=\"within\",\n)\n\n\nLet’s explore the 311 requests in the Greenwich neighborhood of the city:\n\n# Extract out the point tickets for Greenwich\ngreenwich_tickets = requests_with_hood.query(\"ZillowName == 'Greenwich'\")\n\n\n# Get the neighborhood boundary for Greenwich\ngreenwich_geo = neighborhoods.query(\"ZillowName == 'Greenwich'\")\n\ngreenwich_geo.squeeze().geometry\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nQuarto has callout blocks that you can use to emphasize content in different ways. This is a “Note” callout block. More info is available on the Quarto documentation.\n\n\nImport the packages we need:\n\nimport folium\nimport xyzservices\n\nCombine the tickets as markers and the neighborhood boundary on the same Folium map:\n\n# Plot the neighborhood boundary\nm = greenwich_geo.explore(\n    style_kwds={\"weight\": 4, \"color\": \"black\", \"fillColor\": \"none\"},\n    name=\"Neighborhood boundary\",\n    tiles=xyzservices.providers.CartoDB.Voyager,\n)\n\n\n# Add the individual tickets as circle markers and style them\ngreenwich_tickets.explore(\n    m=m,  # Add to the existing map!\n    marker_kwds={\"radius\": 7, \"fill\": True, \"color\": \"crimson\"},\n    marker_type=\"circle_marker\", # or 'marker' or 'circle'\n    name=\"Tickets\",\n)\n\n# Hse folium to add layer control\nfolium.LayerControl().add_to(m)\n\nm  # show map\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "analysis/2-static-images.html",
    "href": "analysis/2-static-images.html",
    "title": "Showing static visualizations",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and demonstrates how to generate static visualizations with matplotlib, pandas, and seaborn.\nStart by importing the packages we need:\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nLoad the “Palmer penguins” dataset from week 2:\n# Load data on Palmer penguins\npenguins = pd.read_csv(\"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-2/main/data/penguins.csv\")\n# Show the first ten rows\npenguins.head(n=10)    \n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n5\nAdelie\nTorgersen\n39.3\n20.6\n190.0\n3650.0\nmale\n2007\n\n\n6\nAdelie\nTorgersen\n38.9\n17.8\n181.0\n3625.0\nfemale\n2007\n\n\n7\nAdelie\nTorgersen\n39.2\n19.6\n195.0\n4675.0\nmale\n2007\n\n\n8\nAdelie\nTorgersen\n34.1\n18.1\n193.0\n3475.0\nNaN\n2007\n\n\n9\nAdelie\nTorgersen\n42.0\n20.2\n190.0\n4250.0\nNaN\n2007"
  },
  {
    "objectID": "analysis/2-static-images.html#a-simple-visualization-3-different-ways",
    "href": "analysis/2-static-images.html#a-simple-visualization-3-different-ways",
    "title": "Showing static visualizations",
    "section": "A simple visualization, 3 different ways",
    "text": "A simple visualization, 3 different ways\n\nI want to scatter flipper length vs. bill length, colored by the penguin species\n\n\nUsing matplotlib\n\n# Setup a dict to hold colors for each species\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\n\n# Initialize the figure \"fig\" and axes \"ax\"\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Group the data frame by species and loop over each group\n# NOTE: \"group\" will be the dataframe holding the data for \"species\"\nfor species, group_df in penguins.groupby(\"species\"):\n\n    # Plot flipper length vs bill length for this group\n    # Note: we are adding this plot to the existing \"ax\" object\n    ax.scatter(\n        group_df[\"flipper_length_mm\"],\n        group_df[\"bill_length_mm\"],\n        marker=\"o\",\n        label=species,\n        color=color_map[species],\n        alpha=0.75,\n        zorder=10\n    )\n\n# Plotting is done...format the axes!\n\n## Add a legend to the axes\nax.legend(loc=\"best\")\n\n## Add x-axis and y-axis labels\nax.set_xlabel(\"Flipper Length (mm)\")\nax.set_ylabel(\"Bill Length (mm)\")\n\n## Add the grid of lines\nax.grid(True);\n\n\n\n\n\n\nHow about in pandas?\nDataFrames have a built-in “plot” function that can make all of the basic type of matplotlib plots!\nFirst, we need to add a new “color” column specifying the color to use for each species type.\nUse the pd.replace() function: it use a dict to replace values in a DataFrame column.\n\n# Calculate a list of colors\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\n\n# Map species name to color \npenguins[\"color\"] = penguins[\"species\"].replace(color_map)\n\npenguins.head()\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\ncolor\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n#1f77b4\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n#1f77b4\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n#1f77b4\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n#1f77b4\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n#1f77b4\n\n\n\n\n\n\n\nNow plot!\n\n# Same as before: Start by initializing the figure and axes\nfig, myAxes = plt.subplots(figsize=(10, 6))\n\n# Scatter plot two columns, colored by third\n# Use the built-in pandas plot.scatter function\npenguins.plot.scatter(\n    x=\"flipper_length_mm\",\n    y=\"bill_length_mm\",\n    c=\"color\",\n    alpha=0.75,\n    ax=myAxes, # IMPORTANT: Make sure to plot on the axes object we created already!\n    zorder=10\n)\n\n# Format the axes finally\nmyAxes.set_xlabel(\"Flipper Length (mm)\")\nmyAxes.set_ylabel(\"Bill Length (mm)\")\nmyAxes.grid(True);\n\n\n\n\nNote: no easy way to get legend added to the plot in this case…\n\n\nSeaborn: statistical data visualization\nSeaborn is designed to plot two columns colored by a third column…\n\n# Initialize the figure and axes\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# style keywords as dict\ncolor_map = {\"Adelie\": \"#1f77b4\", \"Gentoo\": \"#ff7f0e\", \"Chinstrap\": \"#D62728\"}\nstyle = dict(palette=color_map, s=60, edgecolor=\"none\", alpha=0.75, zorder=10)\n\n# use the scatterplot() function\nsns.scatterplot(\n    x=\"flipper_length_mm\",  # the x column\n    y=\"bill_length_mm\",  # the y column\n    hue=\"species\",  # the third dimension (color)\n    data=penguins,  # pass in the data\n    ax=ax,  # plot on the axes object we made\n    **style  # add our style keywords\n)\n\n# Format with matplotlib commands\nax.set_xlabel(\"Flipper Length (mm)\")\nax.set_ylabel(\"Bill Length (mm)\")\nax.grid(True)\nax.legend(loc=\"best\");"
  },
  {
    "objectID": "analysis/index.html",
    "href": "analysis/index.html",
    "title": "Analysis",
    "section": "",
    "text": "Analysis\nThis section includes examples of technical analysis done using Jupyter notebooks. Each sub-section highlights different types of analyses and visualizations. In particular, it highlights that we can easily publish interactive visualizations produced with packages such as hvPlot, altair, or Folium, without losing any of the interactive features.\nOn this page, you might want to share more introductory or background information about the analyses to help guide the reader."
  },
  {
    "objectID": "analysis/3-altair-hvplot.html",
    "href": "analysis/3-altair-hvplot.html",
    "title": "Altair and Hvplot Charts",
    "section": "",
    "text": "This page is generated from a Jupyter notebook and shows examples of embedding interactive charts produced using Altair and hvPlot."
  },
  {
    "objectID": "analysis/3-altair-hvplot.html#example-measles-incidence-in-altair",
    "href": "analysis/3-altair-hvplot.html#example-measles-incidence-in-altair",
    "title": "Altair and Hvplot Charts",
    "section": "Example: Measles Incidence in Altair",
    "text": "Example: Measles Incidence in Altair\nFirst, let’s load the data for measles incidence in wide format:\n\n\nCode\nurl = \"https://raw.githubusercontent.com/MUSA-550-Fall-2023/week-2/main/data/measles_incidence.csv\"\ndata = pd.read_csv(url, skiprows=2, na_values=\"-\")\n\n\n\n\n\n\n\n\n\n\n\nYEAR\nWEEK\nALABAMA\nALASKA\nARIZONA\nARKANSAS\nCALIFORNIA\nCOLORADO\nCONNECTICUT\nDELAWARE\n...\nSOUTH DAKOTA\nTENNESSEE\nTEXAS\nUTAH\nVERMONT\nVIRGINIA\nWASHINGTON\nWEST VIRGINIA\nWISCONSIN\nWYOMING\n\n\n\n\n0\n1928\n1\n3.67\nNaN\n1.90\n4.11\n1.38\n8.38\n4.50\n8.58\n...\n5.69\n22.03\n1.18\n0.4\n0.28\nNaN\n14.83\n3.36\n1.54\n0.91\n\n\n1\n1928\n2\n6.25\nNaN\n6.40\n9.91\n1.80\n6.02\n9.00\n7.30\n...\n6.57\n16.96\n0.63\nNaN\n0.56\nNaN\n17.34\n4.19\n0.96\nNaN\n\n\n2\n1928\n3\n7.95\nNaN\n4.50\n11.15\n1.31\n2.86\n8.81\n15.88\n...\n2.04\n24.66\n0.62\n0.2\n1.12\nNaN\n15.67\n4.19\n4.79\n1.36\n\n\n3\n1928\n4\n12.58\nNaN\n1.90\n13.75\n1.87\n13.71\n10.40\n4.29\n...\n2.19\n18.86\n0.37\n0.2\n6.70\nNaN\n12.77\n4.66\n1.64\n3.64\n\n\n4\n1928\n5\n8.03\nNaN\n0.47\n20.79\n2.38\n5.13\n16.80\n5.58\n...\n3.94\n20.05\n1.57\n0.4\n6.70\nNaN\n18.83\n7.37\n2.91\n0.91\n\n\n\n\n5 rows × 53 columns\n\n\n\nThen, use the pandas.melt() function to convert it to tidy format:\n\n\nCode\nannual = data.drop(\"WEEK\", axis=1)\nmeasles = annual.groupby(\"YEAR\").sum().reset_index()\nmeasles = measles.melt(id_vars=\"YEAR\", var_name=\"state\", value_name=\"incidence\")\n\n\n\n\n\n\n\n\n\n\n\nYEAR\nstate\nincidence\n\n\n\n\n0\n1928\nALABAMA\n334.99\n\n\n1\n1929\nALABAMA\n111.93\n\n\n2\n1930\nALABAMA\n157.00\n\n\n3\n1931\nALABAMA\n337.29\n\n\n4\n1932\nALABAMA\n10.21\n\n\n\n\n\n\n\nFinally, load altair:\n\nimport altair as alt\n\nAnd generate our final data viz:\n\n# use a custom color map\ncolormap = alt.Scale(\n    domain=[0, 100, 200, 300, 1000, 3000],\n    range=[\n        \"#F0F8FF\",\n        \"cornflowerblue\",\n        \"mediumseagreen\",\n        \"#FFEE00\",\n        \"darkorange\",\n        \"firebrick\",\n    ],\n    type=\"sqrt\",\n)\n\n# Vertical line for vaccination year\nthreshold = pd.DataFrame([{\"threshold\": 1963}])\n\n# plot YEAR vs state, colored by incidence\nchart = (\n    alt.Chart(measles)\n    .mark_rect()\n    .encode(\n        x=alt.X(\"YEAR:O\", axis=alt.Axis(title=None, ticks=False)),\n        y=alt.Y(\"state:N\", axis=alt.Axis(title=None, ticks=False)),\n        color=alt.Color(\"incidence:Q\", sort=\"ascending\", scale=colormap, legend=None),\n        tooltip=[\"state\", \"YEAR\", \"incidence\"],\n    )\n    .properties(width=650, height=500)\n)\n\nrule = alt.Chart(threshold).mark_rule(strokeWidth=4).encode(x=\"threshold:O\")\n\nout = chart + rule\nout"
  },
  {
    "objectID": "analysis/3-altair-hvplot.html#example-measles-incidence-in-hvplot",
    "href": "analysis/3-altair-hvplot.html#example-measles-incidence-in-hvplot",
    "title": "Altair and Hvplot Charts",
    "section": "Example: Measles Incidence in hvplot",
    "text": "Example: Measles Incidence in hvplot\n\n\n\n\n\n\n\n\n\n\n\n\nGenerate the same data viz in hvplot:\n\n# Make the heatmap with hvplot\nheatmap = measles.hvplot.heatmap(\n    x=\"YEAR\",\n    y=\"state\",\n    C=\"incidence\", # color each square by the incidence\n    reduce_function=np.sum, # sum the incidence for each state/year\n    frame_height=450,\n    frame_width=600,\n    flip_yaxis=True,\n    rot=90,\n    colorbar=False,\n    cmap=\"viridis\",\n    xlabel=\"\",\n    ylabel=\"\",\n)\n\n# Some additional formatting using holoviews \n# For more info: http://holoviews.org/user_guide/Customizing_Plots.html\nheatmap = heatmap.redim(state=\"State\", YEAR=\"Year\")\nheatmap = heatmap.opts(fontsize={\"xticks\": 0, \"yticks\": 6}, toolbar=\"above\")\nheatmap"
  },
  {
    "objectID": "analysis/1-python-code-blocks.html",
    "href": "analysis/1-python-code-blocks.html",
    "title": "Python code blocks",
    "section": "",
    "text": "This is an example from the Quarto documentation that shows how to mix executable Python code blocks into a markdown file in a “Quarto markdown” .qmd file.\nFor a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "analysis/lecture-5A.html",
    "href": "analysis/lecture-5A.html",
    "title": "Week 5A: More Geospatial Analysis: Urban Networks",
    "section": "",
    "text": "Monday, October 2, 2023\nSection 401\n# The usual imports\nimport altair as alt\nimport geopandas as gpd\nimport numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n# Show all columns in dataframes\npd.options.display.max_columns = 999\n# Hide warnings due to issue in shapely package \n# See: https://github.com/shapely/shapely/issues/1345\nnp.seterr(invalid=\"ignore\");"
  },
  {
    "objectID": "analysis/lecture-5A.html#today-urban-street-networks-and-openstreetmap-osm",
    "href": "analysis/lecture-5A.html#today-urban-street-networks-and-openstreetmap-osm",
    "title": "Week 5A: More Geospatial Analysis: Urban Networks",
    "section": "Today: Urban street networks and OpenStreetMap (OSM)",
    "text": "Today: Urban street networks and OpenStreetMap (OSM)\n\nTwo tools that make working with OSM data very easy\nWhat kind of questions can we answer?\n\nStreet orientations\nMapping event points to streets: car crashes\nMapping amenities\nNetwork-constrained distances: accessibility"
  },
  {
    "objectID": "analysis/lecture-5A.html#osm-what-is-it",
    "href": "analysis/lecture-5A.html#osm-what-is-it",
    "title": "Week 5A: More Geospatial Analysis: Urban Networks",
    "section": "OSM: what is it?",
    "text": "OSM: what is it?\n\nCollaborative mapping\nA free editable map of the World\nSort of like Wikipedia for maps\n\nGreat source of data: street networks and a wealth of amenity information\nhttps://www.openstreetmap.org"
  },
  {
    "objectID": "analysis/lecture-5A.html#working-with-osm-data",
    "href": "analysis/lecture-5A.html#working-with-osm-data",
    "title": "Week 5A: More Geospatial Analysis: Urban Networks",
    "section": "Working with OSM data",
    "text": "Working with OSM data\n\nRaw data is very messy\nTwo relatively new, amazing Python packages greatly simply the process\nRelated, but complementary features\n\nOSMnx: downloading and manipulating streets as networks\nPandana: networks focused on accessibility of amenities\n\n\nRelated: interactive web maps in Python"
  },
  {
    "objectID": "analysis/lecture-5A.html#part-1-osmnx",
    "href": "analysis/lecture-5A.html#part-1-osmnx",
    "title": "Week 5A: More Geospatial Analysis: Urban Networks",
    "section": "Part 1: OSMnx",
    "text": "Part 1: OSMnx\nRelatively new package (just a few years old), but quickly becoming the go to package for working with street networks and OpenStreetMap data in Python.\nSeveral key features:\n\nDownloading political boundaries for cities, states, countries, etc\nDownloading street networks\nAnalyzing networks: routing, visualization, statistics\n\nGitHub\nIntroductory Blog Post\nJupyter Notebook Examples (Binder)\nDocumentation\n\n\n\nimport osmnx as ox\n\n\n1.1. Getting boundary shapefiles from OSM\nKey function: geocode_to_gdf() (docs)\nWe can get the boundary for anything identified as a “place” by OSM.\nImportant: Be careful to pass the right place name that OSM needs\n\nphilly = ox.geocode_to_gdf(\"Philadelphia, PA\")\nphilly.head()\n\n\n\n\n\n\n\n\ngeometry\nbbox_north\nbbox_south\nbbox_east\nbbox_west\nplace_id\nosm_type\nosm_id\nlat\nlon\nclass\ntype\nplace_rank\nimportance\naddresstype\nname\ndisplay_name\n\n\n\n\n0\nPOLYGON ((-75.28030 39.97500, -75.28022 39.974...\n40.137959\n39.867005\n-74.955831\n-75.280298\n14128726\nrelation\n188022\n39.952724\n-75.163526\nboundary\nadministrative\n16\n0.713797\ncity\nPhiladelphia\nPhiladelphia, Pennsylvania, United States\n\n\n\n\n\n\n\n\nphilly.crs\n\n&lt;Geographic 2D CRS: EPSG:4326&gt;\nName: WGS 84\nAxis Info [ellipsoidal]:\n- Lat[north]: Geodetic latitude (degree)\n- Lon[east]: Geodetic longitude (degree)\nArea of Use:\n- name: World.\n- bounds: (-180.0, -90.0, 180.0, 90.0)\nDatum: World Geodetic System 1984 ensemble\n- Ellipsoid: WGS 84\n- Prime Meridian: Greenwich\n\n\nWe can plot it just like any other GeoDataFrame\n\n# Project it to Web Mercator first and plot\nax = philly.to_crs(epsg=3857).plot(facecolor=\"none\", edgecolor=\"black\")\nax.set_axis_off()\n\n\n\n\n\n\n1.2 Projecting with OSMnx\nKey function: project_gdf() (docs)\nAutomatically projects to the Universal Transverse Mercator (UTM) CRS for the UTM zone that the centroid of the polygon lies in\nA good, general projection that works for most latitudes except very northern locations.\n\nax = ox.project_gdf(philly).plot(fc=\"lightblue\", ec=\"gray\")\nax.set_axis_off()\n\n\n\n\nSome more examples:\n\n# Some examples\nplace1 = ox.geocode_to_gdf(\"Manhattan, New York City, New York, USA\")\nplace2 = ox.geocode_to_gdf(\"Miami-Dade County, Florida\")\nplace3 = ox.geocode_to_gdf(\"Florida, USA\")\nplace4 = ox.geocode_to_gdf(\"Spain\")\n\n\n# Manhattan\nax = ox.project_gdf(place1).plot(fc=\"lightblue\", ec=\"gray\")\nax.set_axis_off()\n\n\n\n\n\n# Miami-Dade County\nax = ox.project_gdf(place2).plot(fc=\"lightblue\", ec=\"gray\")\nax.set_axis_off()\n\n\n\n\n\n# Florida\nax = ox.project_gdf(place3).plot(fc=\"lightblue\", ec=\"gray\")\nax.set_axis_off()\n\n\n\n\n\n# Spain\nax = ox.project_gdf(place4).plot(fc=\"lightblue\", ec=\"gray\")\nax.set_axis_off()\n\n\n\n\n\n\n1.3 Downloading OSM features\nKey functions: features_from_*\n\nfeatures_from_place() (docs)\n\nDownload features within an OSM place boundary\n\nfeatures_from_address() (docs)\n\nDownload features within a certain distance of an address\n\nfeatures_from_bbox() (docs)\n\nDownload features within a N, S, E, W bounding box\n\nfeatures_from_point() (docs)\n\nDownload features within a certain distance of a specified point\n\nfeatures_from_polygon() (docs)\n\nDownload features within a polygon object\n\n\n\n\n\n\n\n\nAbout OSM features\n\n\n\nImportant reference: https://wiki.openstreetmap.org/wiki/Map_Features\n\nOSM uses a tagging system to categorize different map features\nThe main feature categories are available on the OSM Wikipedia\n\nExamples: ‘amenity’, ‘building’, ‘landuse’, ‘highway’\n\nThere are specific sub-categories for each feature type too:\n\nAmenity examples: ‘bar’, ‘college’, ‘library’\n\n\nIn the language of OSM, the “key” is the main feature category (e.g., amenity) and the “value” is the sub-category type (e.g., “bar”)\n\n\nosmnx mirrors the key/value syntax of OSM. Use a dict to specify the features you want:\n\n# Get all amenities in Philadelphia\namenities = ox.features_from_place(\"Philadelphia, PA\", tags={\"amenity\": True})\n\n\nlen(amenities)\n\n10681\n\n\n\namenities.head()\n\n\n\n\n\n\n\n\n\ngeometry\namenity\ncreated_by\ncuisine\nname\nbrand\nbrand:wikidata\nbrand:wikipedia\noperator\noperator:wikidata\noperator:wikipedia\nshort_name\naddr:city\naddr:housenumber\naddr:postcode\naddr:state\naddr:street\ncontact:website\nofficial_name\nopening_hours\nphone\ntakeaway\nsource\nwheelchair\nhealthcare\ninternet_access\nurl\ncontact:phone\ndescription\nemail\nwebsite\nwikidata\ninternet_access:ssid\nbrewery\nalt_name\nele\ngnis:county_id\ngnis:created\ngnis:feature_id\ngnis:state_id\nreligion\nhistoric:amenity\nold_name\ndenomination\nbuilding\ncomment\noperator:type\nschool\nwikipedia\ngnis:edited\ncheck_date\ncraft\nmicrobrewery\nrestaurant\ncontact:facebook\nname:en\nsocial_facility\noperator:short\nemergency\nhealthcare:speciality\nbicycle_parking\ncapacity\ncovered\nbarrier\natm\nattraction\ngnis:county_name\ngnis:import_uuid\ngnis:reviewed\ninternet_access:fee\naddr:county\naddr:country\noutdoor_seating\nartist_name\nartwork_subject\nartwork_type\nimage\nstart_date\nstatue\nsubject:wikidata\ntourism\nreservation\nwebsite:menu\nair_conditioning\nshop\ntraining\ntoilets:wheelchair\naddr:housename\nbottle\nparking\ndesignation\nnot:brand:wikidata\ndispensing\ndrive_through\ncheck_date:opening_hours\nopening_hours:signed\nscreen\ndelivery\ndiet:vegan\npayment:cash\npayment:coins\nindoor_seating\nsmoking\narchitect\ncontact:instagram\ncollection_times\nref\nmale\nfemale\nfee\ndiet:vegetarian\nfax\nbar\nsource:pkey\nfixme\naccess\nchanging_table\ntoilets\nname:zh\naddr:full\nentrance\nlevel\nname:he\nfuel:biodiesel\nfuel:biogas\nfuel:cng\nfuel:diesel\nfuel:e10\nfuel:e85\nfuel:electricity\nsport\nwifi\ncollection_times:signed\nref:signed\ndrive_in\ncheck_date:collection_times\nfood\ntoilets:access\npayment:bitcoin\ndiet:halal\ndisused:amenity\nbranch\nself_service\ndiet:meat\nnote\nleisure\ndrink:club-mate\ncar_wash\ncompressed_air\ntoilets:disposal\nunisex\ncontact:twitter\ncurrency:XBT\ndiet:pescetarian\nlgbtq\npayment:credit_cards\npayment:debit_cards\npark_ride\nsupervised\nlanduse\nflickr\ncontact:email\nfacebook\ninstagram\nservice_times\ntwitter\nyoutube\nsource:cuisine\nsocial_facility:for\ndisused:shop\ntoilets:position\nmaxheight\nwheelchair:description\nwheelchair:description:en\nlayer\nservice:bicycle:chain_tool\nservice:bicycle:pump\ncurrency:USD\ndrink:coca-cola\ndrink:coke\ndrink:cola\ndrink:cola_zero\ndrink:soda\ndrink:water\nvending\nopening_hours:kitchen\nbicycle_rental\nnetwork\nnetwork:wikidata\nnetwork:wikipedia\namenity_1\nrecycling:computers\nrecycling:tv_monitor\nrecycling_type\nferry\npublic_transport\ntoilets:unisex\nkitchen_hours\nanimal\naddr:unit\nwas:amenity\nwas:cuisine\nwas:delivery\nwas:drive_through\nwas:name\nwas:outdoor_seating\nwas:takeaway\ndirection\nbackrest\nservice:bicycle:repair\npayment:cards\nname:es\ndiet:kosher\ntheatre:genre\nservice:bicycle:tools\nbeds\npayment:visa\ncash_in\ncurrency:BCH\ncurrency:LTC\noffice\ndate\ndisplay\nfaces\nstudio\nname:ca\nbench\nlit\nshelter_type\naddr:city:ar\nname:ar\ncolour\nmaterial\nfountain\naddr:block_number\nseats\nbrand:type\nindoor\nparcel_locker:type\nparcel_mail_in\nparcel_pickup\nhistoric\ntype\npayment:american_express\npayment:discover_card\npayment:mastercard\ndog\nrecycling:beverage_cartons\nrecycling:cans\nrecycling:glass_bottles\nrecycling:paper\nrecycling:plastic\nrecycling:plastic_bottles\nrecycling:plastic_packaging\nportable\ntoilets:handwashing\nopening_hours:drive_through\ninternet_access:description\nname:vi\npayment:cheque\nmin_age\nbus\ntram\nwaste\npayment:cash_app\npayment:venmo\nseating\nstreet_vendor\ntheatre:type\nsmoothness\nsurface\nbrand:en\nbrand:zh\nlocation\ndrinking_water\nheight\nfridge\nwikimedia_commons\nopening_hours:covid19\ndiet:healthy\nabandoned:amenity\nmemorial\npayment:lightning\npayment:lightning_contactless\npayment:onchain\ncountry\npayment:contactless\ndelivery:partner\ninternet_access:password\npost_box:type\ndescription:en\ninscription\ncheck_date:currency:XBT\npublic_bookcase:type\nurgent_care\ndiet:gluten_free\ncommunity_centre:for\ncommunity_centre\nanimal_shelter\nname:etymology\nname:etymology:wikidata\nmobile\nsocial_centre:for\nnodes\nbuilding:levels\ncapacity:disabled\nbuilding:floor\nref:nrhp\nvehicle\nnatural\nwater\nbuilding:use\nship:type\nroof:shape\nautomated\nbrand:website\nbuilding:material\nsource:name\nroof:levels\nroof:material\naccess:conditional\nrite\nheritage\nheritage:operator\narchitect:wikidata\nbuilding:levels:underground\nheritage:website\nnrhp:criteria\nnrhp:inscription_date\nbuilding:colour\narea\ncheck_date:compressed_air\ngnis:fcode\nnonsquare\nname:ja\nname:zn\nroof:orientation\nhappy_hours\nbuilding:part\nelevation\nhistoric:name\ngrades\nmaxstay\nmonastery:type\nlibrary\ntheme\nowner\nloc_name\ndrink\nbin\npolice\nschool:type\nold_name1\nold_name2\nfuel:octane_95\nfuel:gasoline\nfuel:octane_87\nhealthcare:counselling\norientation\nparking:orientation\nprotection_title\nsource_ref\nparking_space\nways\nhealthcare:for\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n109811385\nPOINT (-75.19487 40.05846)\nbench\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n274215467\nPOINT (-75.19492 39.95935)\nfast_food\nPotlatch 0.9c\npizza\nPowelton Pizza\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n274216093\nPOINT (-75.19125 39.95764)\natm\nNaN\nNaN\nCitibank\nCitibank\nQ857063\nen:Citibank\nCitibank\nQ857063\nen:Citibank\nCiti\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n274217596\nPOINT (-75.19229 39.95301)\ncafe\nNaN\ncoffee_shop\nStarbucks\nStarbucks\nQ37158\nen:Starbucks\nNaN\nNaN\nNaN\nNaN\nPhiladelphia\n3401\n19104\nPA\nWalnut Street\nhttps://www.starbucks.com/store-locator/store/...\nStarbucks Coffee\nMo-Fr 05:30-24:00; Sa,Su 06:00-24:00\n215-387-1914\nyes\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n313440966\nPOINT (-75.16694 39.96394)\ncar_sharing\nPotlatch 0.10f\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nlocal_knowledge\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n\n\n\n\n# Get all bars in philadelphia\nbars = ox.features_from_place(\"Philadelphia, PA\", tags={\"amenity\": \"bar\"})\n\n\nlen(bars)\n\n166\n\n\n\nbars.head()\n\n\n\n\n\n\n\n\n\naddr:city\naddr:housenumber\naddr:postcode\naddr:state\naddr:street\namenity\nbrewery\ncraft\ngnis:county_id\nmicrobrewery\nname\noperator\nrestaurant\nwebsite\nwikidata\nwikipedia\ngeometry\ncontact:phone\ncontact:website\ndescription\nopening_hours\noutdoor_seating\ncheck_date\ncontact:facebook\nphone\nair_conditioning\nsmoking\ntoilets:wheelchair\nwheelchair\ncheck_date:opening_hours\nopening_hours:signed\nindoor_seating\ndesignation\naddr:housename\nsource\nwifi\nleisure\nsport\ncuisine\ndiet:vegan\ndiet:vegetarian\nfood\ninternet_access\nbrand\nbrand:wikidata\nwheelchair:description\nfixme\nname:en\nname:es\naddr:unit\nemail\nmin_age\nalt_name\nlevel\nheight\nnodes\natm\nbuilding\nbuilding:levels\nnonsquare\nheritage\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n357303425\nPhiladelphia\n500\n19123\nPA\nSpring Garden Street\nbar\nyes\nbrewery\n101\nyes\nYards Brewing Company\nYards Brewing Company\nyes\nhttps://yardsbrewing.com/\nQ16903914\nen:Yards Brewing Company\nPOINT (-75.14712 39.96067)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n655425272\nNaN\nNaN\nNaN\nNaN\nNaN\nbar\nNaN\nNaN\nNaN\nNaN\nDrinkers West\nNaN\nNaN\nNaN\nNaN\nNaN\nPOINT (-75.20020 39.95521)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1033935437\nNaN\n2101\nNaN\nNaN\nChestnut Street\nbar\nNaN\nNaN\nNaN\nNaN\nMix Bar & Grill\nNaN\nNaN\nNaN\nNaN\nNaN\nPOINT (-75.17552 39.95242)\n+1 215-568-3355\nhttps://mixbarandgrillphilly.com/location/mix-...\nThe bar is open until whenever the rush ends.\nMo-We,Su 11:00-22:00; Th-Sa 11:00-23:00\nyes\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1167079387\nNaN\n401\nNaN\nNaN\nSouth Street\nbar\nNaN\nNaN\nNaN\nNaN\nMilkBoy South Street\nNaN\nNaN\nNaN\nNaN\nNaN\nPOINT (-75.14925 39.94170)\n+1 215-925-6455\nhttps://www.milkboy.tv/southstreet\nNaN\nMo-Tu,Su 11:00-24:00; We-Sa 11:00-25:00\nNaN\n2023-04-12\nhttps://www.facebook.com/milkboysouthstreet\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1204761128\nNaN\nNaN\nNaN\nNaN\nNaN\nbar\nNaN\nNaN\nNaN\nNaN\nVikings High School Club\nNaN\nNaN\nNaN\nNaN\nNaN\nPOINT (-75.16363 39.92685)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n\n\n\n\n# Get bar, pub, and restaurant features in Philadelphia\nfood_and_drink = ox.features_from_place(\n    \"Philadelphia, PA\", tags={\"amenity\": [\"pub\", \"bar\", \"restaurant\"]}\n)\n\n\nlen(food_and_drink)\n\n1078\n\n\n\nfood_and_drink.head()\n\n\n\n\n\n\n\n\n\namenity\ncreated_by\nname\nsource\nwheelchair\ngeometry\naddr:city\naddr:housenumber\naddr:postcode\naddr:state\naddr:street\nbrewery\nopening_hours\ncraft\ngnis:county_id\nmicrobrewery\noperator\nrestaurant\nwebsite\nwikidata\nwikipedia\ncuisine\noutdoor_seating\nbrand\nbrand:wikidata\ncheck_date\ncontact:facebook\ncontact:website\nemail\nphone\nreservation\nwebsite:menu\ndescription\ndesignation\nnot:brand:wikidata\ncheck_date:opening_hours\nopening_hours:signed\ncontact:phone\ncontact:instagram\ninternet_access\ndiet:vegan\ndiet:vegetarian\nfax\nair_conditioning\nsmoking\nbar\ntakeaway\naddr:housename\ntoilets:wheelchair\naddr:country\nalt_name\nshort_name\nname:zh\nlevel\nindoor_seating\nsport\nwifi\ndelivery\ndrive_in\npayment:cash\nfood\npayment:bitcoin\ndiet:halal\ndisused:amenity\nbrand:wikipedia\nofficial_name\ndiet:meat\ncapacity\nnote\nleisure\ncontact:twitter\ncurrency:XBT\nfixme\ndiet:pescetarian\nlgbtq\npayment:credit_cards\npayment:debit_cards\nbranch\nsource:cuisine\nwheelchair:description\nfacebook\nopening_hours:kitchen\nref\namenity_1\nkitchen_hours\nname:en\nname:es\naddr:unit\nname:ca\ninternet_access:fee\ntoilets\npayment:american_express\npayment:discover_card\npayment:mastercard\npayment:visa\nstart_date\ninternet_access:description\ninternet_access:ssid\nmin_age\ndiet:healthy\ndrive_through\ncountry\ndelivery:partner\ntoilets:access\nheight\npayment:contactless\ndiet:gluten_free\nnodes\nbuilding\nhistoric\npayment:cards\nship:type\natm\nbuilding:levels\narea\nimage\nroof:levels\nname:ja\nname:zn\nhappy_hours\nnonsquare\ntheme\nheritage\nlayer\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n333786044\nrestaurant\nPotlatch 0.10f\nSam's Morning Glory\nknowledge\nlimited\nPOINT (-75.15893 39.94086)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n343293806\npub\nNaN\nProhibition Taproom\nsurvey\nNaN\nPOINT (-75.15946 39.96073)\nPhiladelphia\n501\n19123\nPA\nNorth 13th Street\nyes\nMo-Su 11:00-02:00\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n357303425\nbar\nNaN\nYards Brewing Company\nNaN\nNaN\nPOINT (-75.14712 39.96067)\nPhiladelphia\n500\n19123\nPA\nSpring Garden Street\nyes\nNaN\nbrewery\n101\nyes\nYards Brewing Company\nyes\nhttps://yardsbrewing.com/\nQ16903914\nen:Yards Brewing Company\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n566683522\nrestaurant\nNaN\nSpring Garden Pizza & Restaurant\nNaN\nNaN\nPOINT (-75.15755 39.96205)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\npizza\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n596230881\nrestaurant\nNaN\nNaN\nNaN\nNaN\nPOINT (-75.18682 40.05492)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n\n\n\n\n# Get bus stop features\nbus_stops = ox.features_from_place(\"Philadelphia, PA\", tags={\"highway\": \"bus_stop\"})\n\n\nlen(bus_stops)\n\n290\n\n\n\nbus_stops.head()\n\n\n\n\n\n\n\n\n\nbench\nbus\ncovered\nhighway\nname\nnetwork\nnetwork:wikidata\noperator\npublic_transport\nshelter\ngeometry\nnetwork:wikipedia\nref\ntactile_paving\nwheelchair\nroute_ref\nlocal_ref\ndesignation\nsource\nbin\nlit\ndepartures_board\ninternet_access\naddr:street\nroute_ref_1\ndescription\nnote\noperator:wikidata\nbrand\nbrand:wikidata\nrailway\ntram\ntrolleybus\nnetwork:short\nnot:network:wikidata\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n361011456\nyes\nyes\nyes\nbus_stop\n13th St & Market St\nSEPTA\nQ2037863\nSEPTA\nplatform\nyes\nPOINT (-75.16166 39.95223)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n750281693\nNaN\nyes\nNaN\nbus_stop\nNaN\nNaN\nNaN\nNaN\nplatform\nNaN\nPOINT (-75.07732 40.01797)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n768271130\nNaN\nyes\nNaN\nbus_stop\nWissahickon Transportation Center\nSEPTA\nQ2037863\nSEPTA\nplatform\nyes\nPOINT (-75.20726 40.01487)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1015342921\nNaN\nyes\nNaN\nbus_stop\nNaN\nNaN\nNaN\nNaN\nplatform\nNaN\nPOINT (-75.18187 39.96640)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1015342926\nNaN\nyes\nNaN\nbus_stop\nNaN\nNaN\nNaN\nNaN\nplatform\nNaN\nPOINT (-75.18024 39.96670)\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n\n\n\n\n# Get commercial and retail landuse features\nlanduse = ox.features_from_place(\n    \"Philadelphia, PA\", tags={\"landuse\": [\"commercial\", \"retail\"]}\n)\n\n\nlen(landuse)\n\n349\n\n\nLet’s plot the land use features:\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax = landuse.plot(ax=ax)\nax.set_axis_off()\n\n\n\n\n\n\n1.4 Downloading street networks\nKey functions: graph_from_*\n\ngraph_from_place() (docs)\n\nDownload street network within an OSM place boundary\n\ngraph_from_address() (docs)\n\nDownload street network within a certain distance of an address\n\ngraph_from_bbox() (docs)\n\nDownload street network within a N, S, E, W bounding box\n\ngraph_from_point() (docs)\n\nDownload street network within a certain distance of a specified point\n\ngraph_from_polygon() (docs)\n\nDownload street network within a polygon object\n\n\n\nStreet network around an address\nGet streets within 500 meters of the center of Center City\n\nG = ox.graph_from_address(\"Center City, Philadelphia, PA\", dist=500)\n\nProject and plot it:\n\nG_projected = ox.project_graph(G)\nox.plot_graph(G_projected);\n\n\n\n\nRemove the nodes:\n\nox.plot_graph(G_projected, node_size=0);\n\n\n\n\nLet’s zoom out to 2,000 meters. This will take a little longer.\n\nG = ox.graph_from_address(\"Center City, Philadelphia, PA\", dist=2000)\nG_projected = ox.project_graph(G)\n\n\nox.plot_graph(G_projected, node_size=0);\n\n\n\n\n\n\nGetting different network types\n\ndrive - get drivable public streets (but not service roads)\ndrive_service - get drivable streets, including service roads\nwalk - get all streets and paths that pedestrians can use (this network type ignores one-way directionality)\nbike - get all streets and paths that cyclists can use\nall - download all non-private OSM streets and paths\nall_private - download all OSM streets and paths, including private-access ones (default)\n\n\n# the \"drive\" network\nG = ox.graph_from_address(\"Center City, Philadelphia, PA\", network_type=\"drive\")\nox.plot_graph(G);\n\n\n\n\n\n# the \"walk\" network\nG = ox.graph_from_address(\"Center City, Philadelphia, PA\", network_type=\"walk\")\nox.plot_graph(ox.project_graph(G));\n\n\n\n\n\n\nStreet network within a place boundary\nUse graph_from_place() to get the streets within a specific OSM place.\n\n\n\n\n\n\nCaution\n\n\n\nA couple of things to watch out for: 1. The place query has to be resolved by OSM. 2. If the place is a big city, you might be downloading a lot of data!\n\n\nLet’s check out the street network for Berkeley, CA:\n\n\nStreets within a specific polygon\nExample: Let’s download all streets within Center City. We will use the “Central” planning district as a proxy for this area. The city’s planning districts are available on Open Data Philly.\n\nplanning_districts = gpd.read_file(\n    \"https://opendata.arcgis.com/datasets/0960ea0f38f44146bb562f2b212075aa_0.geojson\"\n)\n\n\nplanning_districts.head(20)\n\n\n\n\n\n\n\n\nOBJECTID_1\nOBJECTID\nDIST_NAME\nABBREV\nShape__Area\nShape__Length\nPlanningDist\nDaytimePop\ngeometry\n\n\n\n\n0\n1\n14\nRiver Wards\nRW\n2.107270e+08\n66931.595020\nNaN\nNaN\nPOLYGON ((-75.09798 40.00496, -75.09687 40.005...\n\n\n1\n2\n3\nNorth Delaware\nNDEL\n2.700915e+08\n89213.074378\nNaN\nNaN\nPOLYGON ((-74.98159 40.05363, -74.98139 40.053...\n\n\n2\n3\n0\nLower Far Northeast\nLFNE\n3.068529e+08\n92703.285159\nNaN\nNaN\nPOLYGON ((-74.96443 40.11728, -74.96434 40.117...\n\n\n3\n4\n9\nCentral\nCTR\n1.782880e+08\n71405.143450\nNaN\nNaN\nPOLYGON ((-75.14791 39.96733, -75.14715 39.967...\n\n\n4\n5\n10\nUniversity Southwest\nUSW\n1.296468e+08\n65267.676141\nNaN\nNaN\nPOLYGON ((-75.18742 39.96338, -75.18644 39.963...\n\n\n5\n6\n17\nUpper Northwest\nUNW\n2.851603e+08\n82109.452088\nNaN\nNaN\nPOLYGON ((-75.20629 40.08296, -75.20415 40.081...\n\n\n6\n7\n18\nUpper North\nUNO\n2.227549e+08\n74155.453511\nNaN\nNaN\nPOLYGON ((-75.15584 40.07274, -75.15470 40.072...\n\n\n7\n8\n8\nSouth\nSTH\n1.748206e+08\n65197.355636\nNaN\nNaN\nPOLYGON ((-75.19461 39.94217, -75.19443 39.942...\n\n\n8\n9\n15\nNorth\nNOR\n2.394755e+08\n75031.769136\nNaN\nNaN\nPOLYGON ((-75.10969 40.02217, -75.10937 40.022...\n\n\n9\n10\n16\nLower Northwest\nLNW\n2.585253e+08\n88665.925954\nNaN\nNaN\nPOLYGON ((-75.21379 40.04911, -75.21378 40.049...\n\n\n10\n11\n6\nLower South\nLS\n2.440929e+08\n84999.873989\nNaN\nNaN\nPOLYGON ((-75.20330 39.93792, -75.20127 39.937...\n\n\n11\n12\n1\nLower Northeast\nLNE\n1.651256e+08\n65717.936510\nNaN\nNaN\nPOLYGON ((-75.09223 40.05355, -75.09213 40.053...\n\n\n12\n13\n2\nCentral Northeast\nCNE\n2.277140e+08\n84016.738549\nNaN\nNaN\nPOLYGON ((-75.05403 40.08034, -75.05264 40.079...\n\n\n13\n14\n11\nWest\nWST\n1.301580e+08\n67935.761789\nNaN\nNaN\nPOLYGON ((-75.23017 39.97880, -75.23003 39.978...\n\n\n14\n15\n4\nUpper Far Northeast\nUFNE\n2.913899e+08\n95054.419001\nNaN\nNaN\nPOLYGON ((-74.99854 40.12821, -74.99789 40.127...\n\n\n15\n16\n7\nLower Southwest\nLSW\n2.802802e+08\n86683.850456\nNaN\nNaN\nPOLYGON ((-75.19417 39.87770, -75.19543 39.877...\n\n\n16\n17\n12\nWest Park\nWP\n1.911916e+08\n100090.460719\nNaN\nNaN\nPOLYGON ((-75.20387 39.98574, -75.20390 39.985...\n\n\n17\n18\n13\nLower North\nLNO\n1.643847e+08\n58947.148842\nNaN\nNaN\nPOLYGON ((-75.18686 40.00042, -75.18696 40.000...\n\n\n\n\n\n\n\nTrim to the central district:\n\nUniversitySW = planning_districts.query(\"DIST_NAME == 'University Southwest'\")\n\nAnd plot it:\n\nax = ox.project_gdf(UniversitySW).plot(fc=\"lightblue\", ec=\"gray\")\nax.set_axis_off()\n\n\n\n\nSqueeze it so we can get the geometry polygon:\n\nUniversitySW_outline = UniversitySW.squeeze().geometry\n\nUniversitySW_outline\n\n\n\n\nNow, let’s use ox.graph_from_polygon() to extract streets within this polygon.\n\n# Get the graph\nG_UniversitySW = ox.graph_from_polygon(UniversitySW_outline, network_type=\"drive\")\n\n\n# Viola!\nox.plot_graph(ox.project_graph(G_UniversitySW), node_size=0);\n\n\n\n\n\n\n\n1.5 Converting from a graph to a GeoDataFrame\nKey function: ox.graph_to_gdfs() (docs)\nYou can get a GeoDataFrame for both the nodes (points) and edges (lines)\n\ntype(G_UniversitySW)\n\nnetworkx.classes.multidigraph.MultiDiGraph\n\n\n\n# only get the edges\nUniversitySW_edges = ox.graph_to_gdfs(G_UniversitySW, edges=True, nodes=False)\n\n\n# we have lots of data associated with each edge!\nUniversitySW_edges.head()\n\n\n\n\n\n\n\n\n\n\nosmid\nname\nhighway\noneway\nreversed\nlength\ngeometry\nlanes\nmaxspeed\nbridge\nref\ntunnel\naccess\n\n\nu\nv\nkey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n109729049\n110395837\n0\n12177237\nSouth 53rd Street\nresidential\nFalse\nFalse\n63.895\nLINESTRING (-75.22731 39.94551, -75.22698 39.9...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n110395805\n0\n12177237\nSouth 53rd Street\nresidential\nFalse\nTrue\n61.947\nLINESTRING (-75.22731 39.94551, -75.22745 39.9...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n109729056\n109729049\n0\n12109142\nHadfield Street\nresidential\nTrue\nFalse\n158.613\nLINESTRING (-75.22868 39.94454, -75.22731 39.9...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n110036974\n0\n858930075\nSouth 54th Street\nresidential\nFalse\nFalse\n51.815\nLINESTRING (-75.22868 39.94454, -75.22909 39.9...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n110036982\n0\n858930075\nSouth 54th Street\nresidential\nFalse\nTrue\n61.925\nLINESTRING (-75.22868 39.94454, -75.22818 39.9...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n\n\n\n\n# plot it like any old GeoDataFrame\nax = UniversitySW_edges.to_crs(epsg=3857).plot(color=\"gray\")\n\n# add the neighborhood boundaries\nboundary = gpd.GeoSeries([UniversitySW_outline], crs=\"EPSG:4326\")\nboundary.to_crs(epsg=3857).plot(\n    ax=ax, facecolor=\"none\", edgecolor=\"red\", linewidth=3, zorder=2\n)\n\nax.set_axis_off()\n\n\n\n\nDon’t forget: We can use the .explore() function to get an interactive web map via Folium:\n\nphilly_tourism.head()\n\n\n\n\n\n\n\n\n\nref\ngeometry\nele\ngnis:county_id\ngnis:created\ngnis:feature_id\ngnis:state_id\nname\ntourism\nbrand\nbrand:wikidata\nbrand:wikipedia\noperator\nartwork_type\nhistoric\nsource\nwikidata\ninformation\nartist_name\nmaterial\nwebsite\naddr:state\ngnis:county_name\ngnis:reviewed\ngnis:import_uuid\nfee\nopening_hours\namenity\nartwork_subject\nimage\nstart_date\nstatue\nsubject:wikidata\ncolour\nwheelchair\nwikipedia\naddr:city\nname:de\ndesignation\ndescription\nmuseum\noperator:type\nalt_name\nbarrier\nheritage\nheritage:operator\nheritage:website\nnrhp:criteria\nnrhp:inscription_date\nnrhp:nhl\nprotection_title\nref:nrhp\nsource_ref\nartist:wikidata\nheight\nname:fr\naddr:housenumber\naddr:postcode\naddr:street\nmemorial\nyear_of_construction\nname:ru\nlayer\nphone\ncheck_date\ncontact:email\nname:en\nboard_type\ntoilets:wheelchair\ninscription\nsubject:wikipedia\nlevel\nnatural\nattraction\nnote\ndisplay\nend_date\ncomment\nhistoric:amenity\ngarden:type\nleisure\npostal_code\nofficial_name\ninternet_access\nshort_name\nparking\nguest_house\ninscription:url\ngender\nbicycle\nhiking\ncovered\ndrinking_water\nopenfire\naddr:unit\nmimics\nsource:url\ndirection\nemail\ndepartures_board\nmap_size\nmap_type\ndirection_north\ndirection_southeast\ndirection_west\ndirection_east\ndirection_south\ndirection_northeast\ndirection_northwest\ndirection_southwest\nnodes\nbuilding\nbuilding:material\nname:hi\nbuilding:levels\nroof:shape\nhighway\nincline\nstep_count\nbuilding:wikidata\nbuilding:wikipedia\ncheck_date:opening_hours\nold_name\nsmoking\nbuilding:colour\nair_conditioning\nfax\nrooms\nstars\nroof:colour\naddr:country\ncontact:fax\ncontact:phone\nship:type\naddr:housename\nbar\ndisused:amenity\nroof:material\ninternet_access:fee\nabandoned:amenity\nfixme\ninternet_access:ssid\nfee:conditional\nshop\nroof:levels\nname:zh\nartist:website\nbridge\nfoot\nhorse\nlit\nsac_scale\nsurface\ntrail_visibility\nwidth\nbridge:structure\nman_made\ndisused:website\nboundary\noperator:short\noperator:wikidata\nownership\nprotected\nbuilding:part\narea\nsubject\ncontact:facebook\nways\ntype\nplace\n\n\nelement_type\nosmid\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode\n357371322\nNaN\nPOINT (-75.19580 39.96970)\n17\n101\n08/23/2007\n2347097\n42\nBird Lake Picnic Area\npicnic_site\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n360500844\nNaN\nPOINT (-75.19582 39.95352)\nNaN\nNaN\nNaN\nNaN\nNaN\nHilton Inn at Penn\nhotel\nHilton\nQ598884\nen:Hilton Hotels & Resorts\nHilton\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n360515304\nNaN\nPOINT (-75.14860 39.94771)\nNaN\nNaN\nNaN\nNaN\nNaN\nRobert Morris\nartwork\nNaN\nNaN\nNaN\nNaN\nstatue\nmemorial\nsurvey\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n360542779\nNaN\nPOINT (-75.18932 39.95540)\nNaN\nNaN\nNaN\nNaN\nNaN\nMario the Magnificent\nartwork\nNaN\nNaN\nNaN\nNaN\nstatue\nNaN\nNaN\nQ98563440\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n360777728\nNaN\nPOINT (-75.19021 39.95230)\nNaN\nNaN\nNaN\nNaN\nNaN\nPennsylvania Historical Marker: ENIAC, first a...\ninformation\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nboard\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MUSA 550 Final Project Template",
    "section": "",
    "text": "We can create beautiful websites that describe complex technical analyses in Python using Quarto and deploy them online using GitHub Pages. This combination of tools is a really powerful way to create and share your work. This website is a demo that is meant to be used to create your own Quarto website for the final project in MUSA 550.\nQuarto is a relatively new tool, but is becoming popular quickly. It’s a successor to the Rmarkdown ecosystem that combines functionality into a single tool and also extends its computation power to other languages. Most importantly for us, Quarto supports executing Python code, allowing us to convert Jupyter notebooks to HTML and share them online.\n\n\n\n\n\n\nImportant\n\n\n\nThis template site, including the layout it uses, is just a suggested place to start! For your final project, you’re welcome (and encouraged) to make as many changes as you like to best fit your project."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "MUSA 550 Final Project Template",
    "section": "",
    "text": "We can create beautiful websites that describe complex technical analyses in Python using Quarto and deploy them online using GitHub Pages. This combination of tools is a really powerful way to create and share your work. This website is a demo that is meant to be used to create your own Quarto website for the final project in MUSA 550.\nQuarto is a relatively new tool, but is becoming popular quickly. It’s a successor to the Rmarkdown ecosystem that combines functionality into a single tool and also extends its computation power to other languages. Most importantly for us, Quarto supports executing Python code, allowing us to convert Jupyter notebooks to HTML and share them online.\n\n\n\n\n\n\nImportant\n\n\n\nThis template site, including the layout it uses, is just a suggested place to start! For your final project, you’re welcome (and encouraged) to make as many changes as you like to best fit your project."
  },
  {
    "objectID": "index.html#find-out-more",
    "href": "index.html#find-out-more",
    "title": "MUSA 550 Final Project Template",
    "section": "Find out more",
    "text": "Find out more\nThe code for this repository is hosted on our course’s GitHub page: https://github.com/MUSA-550-Fall-2023/quarto-website-template.\nWe covered the basics of getting started with Quarto and GitHub Pages in week 9. Take a look at the slides for lecture 9A to find out more."
  }
]